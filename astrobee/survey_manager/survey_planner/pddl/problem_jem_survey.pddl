;; Auto-generated by problem_generator.py. Do not edit!
;; Command was: ./tools/problem_generator.py
;; Working directory was: /home/vagrant/isaac/astrobee/survey_manager/survey_planner
;; Problem template: pddl/jem_survey_template.pddl
;; Config 1: data/jem_survey_static.yaml
;; Config 2: data/jem_survey_dynamic.yaml

(define (problem jem-survey)
    (:domain survey-manager)
    (:metric minimize (total-time))
    (:objects
        jem_bay0 jem_bay1 jem_bay2 jem_bay3 jem_bay4 jem_bay5 jem_bay6 jem_bay7 jem_bay8 berth1 berth2 - location
        bumble honey - robot
        o0 o1 o2 o3 o4 - order
    )

    (:goal
        (and
            (completed-panorama bumble o0 jem_bay4)
            (completed-panorama bumble o1 jem_bay3)
            (completed-panorama bumble o2 jem_bay2)
            (completed-panorama bumble o3 jem_bay1)
            (completed-stereo bumble o4 jem_bay1 jem_bay4)
            (robot-at bumble berth1)
            (completed-let-other-robot-reach honey o0 jem_bay5)
            (completed-panorama honey o1 jem_bay7)
            (completed-panorama honey o2 jem_bay6)
            (completed-panorama honey o3 jem_bay5)
            (completed-stereo honey o4 jem_bay7 jem_bay4)
            (robot-at honey berth2)
        )
    )

    (:init
        ;; === Static predicates ===
        (move-connected jem_bay0 jem_bay1)
        (move-connected jem_bay1 jem_bay0)
        (move-connected jem_bay1 jem_bay2)
        (move-connected jem_bay2 jem_bay1)
        (move-connected jem_bay2 jem_bay3)
        (move-connected jem_bay3 jem_bay2)
        (move-connected jem_bay3 jem_bay4)
        (move-connected jem_bay4 jem_bay3)
        (move-connected jem_bay4 jem_bay5)
        (move-connected jem_bay5 jem_bay4)
        (move-connected jem_bay5 jem_bay6)
        (move-connected jem_bay6 jem_bay5)
        (move-connected jem_bay6 jem_bay7)
        (move-connected jem_bay7 jem_bay6)
        (move-connected jem_bay7 jem_bay8)
        (move-connected jem_bay8 jem_bay7)
        (location-real jem_bay1)
        (location-real jem_bay2)
        (location-real jem_bay3)
        (location-real jem_bay4)
        (location-real jem_bay5)
        (location-real jem_bay6)
        (location-real jem_bay7)
        (dock-connected jem_bay7 berth1)
        (dock-connected jem_bay7 berth2)
        (robots-different bumble honey)
        (robots-different honey bumble)
        (locations-different jem_bay0 jem_bay1)
        (locations-different jem_bay0 jem_bay2)
        (locations-different jem_bay0 jem_bay3)
        (locations-different jem_bay0 jem_bay4)
        (locations-different jem_bay0 jem_bay5)
        (locations-different jem_bay0 jem_bay6)
        (locations-different jem_bay0 jem_bay7)
        (locations-different jem_bay0 jem_bay8)
        (locations-different jem_bay1 jem_bay0)
        (locations-different jem_bay1 jem_bay2)
        (locations-different jem_bay1 jem_bay3)
        (locations-different jem_bay1 jem_bay4)
        (locations-different jem_bay1 jem_bay5)
        (locations-different jem_bay1 jem_bay6)
        (locations-different jem_bay1 jem_bay7)
        (locations-different jem_bay1 jem_bay8)
        (locations-different jem_bay2 jem_bay0)
        (locations-different jem_bay2 jem_bay1)
        (locations-different jem_bay2 jem_bay3)
        (locations-different jem_bay2 jem_bay4)
        (locations-different jem_bay2 jem_bay5)
        (locations-different jem_bay2 jem_bay6)
        (locations-different jem_bay2 jem_bay7)
        (locations-different jem_bay2 jem_bay8)
        (locations-different jem_bay3 jem_bay0)
        (locations-different jem_bay3 jem_bay1)
        (locations-different jem_bay3 jem_bay2)
        (locations-different jem_bay3 jem_bay4)
        (locations-different jem_bay3 jem_bay5)
        (locations-different jem_bay3 jem_bay6)
        (locations-different jem_bay3 jem_bay7)
        (locations-different jem_bay3 jem_bay8)
        (locations-different jem_bay4 jem_bay0)
        (locations-different jem_bay4 jem_bay1)
        (locations-different jem_bay4 jem_bay2)
        (locations-different jem_bay4 jem_bay3)
        (locations-different jem_bay4 jem_bay5)
        (locations-different jem_bay4 jem_bay6)
        (locations-different jem_bay4 jem_bay7)
        (locations-different jem_bay4 jem_bay8)
        (locations-different jem_bay5 jem_bay0)
        (locations-different jem_bay5 jem_bay1)
        (locations-different jem_bay5 jem_bay2)
        (locations-different jem_bay5 jem_bay3)
        (locations-different jem_bay5 jem_bay4)
        (locations-different jem_bay5 jem_bay6)
        (locations-different jem_bay5 jem_bay7)
        (locations-different jem_bay5 jem_bay8)
        (locations-different jem_bay6 jem_bay0)
        (locations-different jem_bay6 jem_bay1)
        (locations-different jem_bay6 jem_bay2)
        (locations-different jem_bay6 jem_bay3)
        (locations-different jem_bay6 jem_bay4)
        (locations-different jem_bay6 jem_bay5)
        (locations-different jem_bay6 jem_bay7)
        (locations-different jem_bay6 jem_bay8)
        (locations-different jem_bay7 jem_bay0)
        (locations-different jem_bay7 jem_bay1)
        (locations-different jem_bay7 jem_bay2)
        (locations-different jem_bay7 jem_bay3)
        (locations-different jem_bay7 jem_bay4)
        (locations-different jem_bay7 jem_bay5)
        (locations-different jem_bay7 jem_bay6)
        (locations-different jem_bay7 jem_bay8)
        (locations-different jem_bay8 jem_bay0)
        (locations-different jem_bay8 jem_bay1)
        (locations-different jem_bay8 jem_bay2)
        (locations-different jem_bay8 jem_bay3)
        (locations-different jem_bay8 jem_bay4)
        (locations-different jem_bay8 jem_bay5)
        (locations-different jem_bay8 jem_bay6)
        (locations-different jem_bay8 jem_bay7)

        ;; === Dynamic predicates ===
        (robot-available bumble)
        (robot-available honey)
        (robot-at bumble berth1)
        (robot-at honey berth2)
        (location-available jem_bay0)
        (location-available jem_bay1)
        (location-available jem_bay2)
        (location-available jem_bay3)
        (location-available jem_bay4)
        (location-available jem_bay5)
        (location-available jem_bay6)
        (location-available jem_bay7)
        (location-available jem_bay8)
        (need-stereo bumble o4 jem_bay1 jem_bay4)
        (need-stereo honey o4 jem_bay7 jem_bay4)

        ;; === Static numeric fluents ===
        (= (order-identity o0) 0)
        (= (order-identity o1) 1)
        (= (order-identity o2) 2)
        (= (order-identity o3) 3)
        (= (order-identity o4) 4)

        ;; === Dynamic numeric fluents ===
        (= (robot-order bumble) -1)
        (= (robot-order honey) -1)
    )  ;; end :init
)  ;; end problem

;; Include raw high-level config in problem in case an (ISAAC-custom) planner prefers to use it.

;; BEGIN CONFIG
;; # Copyright (c) 2023, United States Government, as represented by the
;; # Administrator of the National Aeronautics and Space Administration.
;; #
;; # All rights reserved.
;; #
;; # The "ISAAC - Integrated System for Autonomous and Adaptive Caretaking
;; # platform" software is licensed under the Apache License, Version 2.0
;; # (the "License"); you may not use this file except in compliance with the
;; # License. You may obtain a copy of the License at
;; #
;; #     http://www.apache.org/licenses/LICENSE-2.0
;; #
;; # Unless required by applicable law or agreed to in writing, software
;; # distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
;; # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
;; # License for the specific language governing permissions and limitations
;; # under the License.
;;
;; # Static configuration info used when generating a PDDL problem and also when executing actions in a
;; # PDDL plan. This info should be static in the sense that it nominally doesn't change during an ISS
;; # activity, so the survey manager doesn't have to modify it. However, an edge case is that an
;; # operator might want to manually edit something in here (like add a new symbolic location or nudge
;; # the position of a named bay away from an obstacle) and restart the survey manager. On the other
;; # hand, info that is *expected* to change as part of the survey manager conops belongs in
;; # jem_survey_dynamic.yaml.
;;
;; # Useful reference for positions and stereo survey trajectories:
;; # https://babelfish.arc.nasa.gov/confluence/display/FFOPS/ISAAC+Phase+1X+Activity+9+Ground+Procedure
;;
;; bays:
;;   # 3D coordinates for symbolic bays in ISS Analysis Coordinate System used by Astrobee
;;   jem_bay1: [11.0, -4.0, 4.8]
;;   jem_bay2: [11.0, -5.0, 4.8]
;;   jem_bay3: [11.0, -6.0, 4.8]
;;   jem_bay4: [11.0, -7.0, 4.8]
;;   jem_bay5: [11.0, -8.0, 4.8]
;;   jem_bay6: [11.0, -9.0, 4.8]
;;   jem_bay7: [11.0, -9.7, 4.8]
;;
;; bogus_bays: [jem_bay0, jem_bay8]
;; berths: [berth1, berth2]
;; robots: [bumble, honey]
;;
;; stereo:
;;   # Meta-data about stereo survey options
;;   jem_bay1_to_bay3:
;;     # fplan: Name of external fplan specification of trajectory in astrobee_ops/gds/plans/ISAAC/
;;     fplan: "jem_stereo_mapping_bay1_to_bay3.fplan"
;;     # base_location: Where trajectory starts and ends for planning purposes (rough location, not exact)
;;     base_location: jem_bay1
;;     # bound_location: The other end of the interval covered by the trajectory, for planner collision
;;     # check purposes. (Note a trajectory may fly a bit into a bay that it doesn't claim to cover.
;;     # The two surveys that cover the module purposefully overlap.)
;;     bound_location: jem_bay4
;;   jem_bay4_to_bay7:
;;     fplan: "jem_stereo_mapping_bay4_to_bay7.fplan"
;;     base_location: jem_bay7
;;     bound_location: jem_bay4
;; # Copyright (c) 2023, United States Government, as represented by the
;; # Administrator of the National Aeronautics and Space Administration.
;; #
;; # All rights reserved.
;; #
;; # The "ISAAC - Integrated System for Autonomous and Adaptive Caretaking
;; # platform" software is licensed under the Apache License, Version 2.0
;; # (the "License"); you may not use this file except in compliance with the
;; # License. You may obtain a copy of the License at
;; #
;; #     http://www.apache.org/licenses/LICENSE-2.0
;; #
;; # Unless required by applicable law or agreed to in writing, software
;; # distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
;; # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
;; # License for the specific language governing permissions and limitations
;; # under the License.
;;
;; # Example dynamic configuration info used when generating a PDDL problem.  For now, this is goal
;; # conditions and initial state. A likely conops is that the initial version of this file for a
;; # specific activity would be hand-generated, but it might later be automatically regenerated by the
;; # survey manager when a replan is needed (remove completed/failed goals, add retry goals, update
;; # initial state to match actual current state, etc.)  See also jem_survey_static.yaml.
;;
;; goals:
;;
;; - {type: panorama, robot: bumble, order: 0, location: jem_bay4}
;; - {type: panorama, robot: bumble, order: 1, location: jem_bay3}
;; - {type: panorama, robot: bumble, order: 2, location: jem_bay2}
;; - {type: panorama, robot: bumble, order: 3, location: jem_bay1}
;; - {type: stereo, robot: bumble, order: 4, trajectory: jem_bay1_to_bay3}
;;
;; # We want Bumble to return to its berth at the end of the run, but adding this goal causes POPF to
;; # get confused and greatly increase the total run time. For some reason, it doesn't notice it can
;; # use the same plan as without this goal and then add some motion actions at the end to achieve this
;; # goal. Instead, it falls back to only undocking one robot at a time, which slows things down by
;; # about 2x.
;; - {type: robot_at, robot: bumble, location: berth1}
;;
;; - {type: let_other_robot_reach, robot: honey, order: 0, location: jem_bay5}
;; - {type: panorama, robot: honey, order: 1, location: jem_bay7}
;; - {type: panorama, robot: honey, order: 2, location: jem_bay6}
;; - {type: panorama, robot: honey, order: 3, location: jem_bay5}
;;
;; # This is another objective we want to include that for some reason causes POPF to fail to generate
;; # a plan (hang indefinitely). No obvious reason why it should cause a problem.
;; - {type: stereo, robot: honey, order: 4, trajectory: jem_bay4_to_bay7}
;;
;; - {type: robot_at, robot: honey, location: berth2}
;;
;; init:
;;   bumble:
;;     location: berth1
;;   honey:
;;     location: berth2
;; END CONFIG
