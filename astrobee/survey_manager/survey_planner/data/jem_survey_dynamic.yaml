# Copyright (c) 2023, United States Government, as represented by the
# Administrator of the National Aeronautics and Space Administration.
#
# All rights reserved.
#
# The "ISAAC - Integrated System for Autonomous and Adaptive Caretaking
# platform" software is licensed under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with the
# License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

# Example dynamic configuration info used when generating a PDDL problem.  For now, this is goal
# conditions and initial state. A likely conops is that the initial version of this file for a
# specific activity would be hand-generated, but it might later be automatically regenerated by the
# survey manager when a replan is needed (remove completed/failed goals, add retry goals, update
# initial state to match actual current state, etc.)  See also jem_survey_static.yaml.

goals:

- {type: panorama, robot: bumble, order: 0, location: jem_bay4}
- {type: panorama, robot: bumble, order: 1, location: jem_bay3}
- {type: panorama, robot: bumble, order: 2, location: jem_bay2}
- {type: panorama, robot: bumble, order: 3, location: jem_bay1}
- {type: stereo, robot: bumble, order: 4, trajectory: jem_bay1_to_bay3}

# We want Bumble to return to its berth at the end of the run, but adding this goal causes POPF to
# get confused and greatly increase the total run time. For some reason, it doesn't notice it can
# use the same plan as without this goal and then add some motion actions at the end to achieve this
# goal. Instead, it falls back to only undocking one robot at a time, which slows things down by
# about 2x.
# - {type: robot_at, robot: bumble, location: berth1}

- {type: panorama, robot: honey, order: 0, location: jem_bay7}
- {type: panorama, robot: honey, order: 1, location: jem_bay6}
- {type: panorama, robot: honey, order: 2, location: jem_bay5}

# This is another objective we want to include that for some reason causes POPF to fail to generate
# a plan (hang indefinitely). No obvious reason why it should cause a problem.
# - {type: stereo, robot: honey, order: 3, trajectory: jem_bay4_to_bay7}

- {type: robot_at, robot: honey, location: berth2}

init:
  bumble:
    location: berth1
  honey:
    location: berth2
