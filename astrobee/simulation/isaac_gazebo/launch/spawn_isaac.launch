<!-- Copyright (c) 2021, United States Government, as represented by the     -->
<!-- Administrator of the National Aeronautics and Space Administration.     -->
<!--                                                                         -->
<!-- All rights reserved.                                                    -->
<!--                                                                         -->
<!-- The "ISAAC - Integrated System for Autonomous and Adaptive Caretaking   -->
<!-- platform" software is licensed under the Apache License, Version 2.0    -->
<!-- (the "License"); you may not use this file except in compliance with    -->
<!-- the License. You may obtain a copy of the License at                    -->
<!--                                                                         -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                          -->
<!--                                                                         -->
<!-- Unless required by applicable law or agreed to in writing, software     -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,       -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or         -->
<!-- implied. See the License for the specific language governing            -->
<!-- permissions and limitations under the License.                          -->

<launch>
  <arg name="world" />      <!-- World name                -->
  <arg name="ns" />         <!-- Robot namespace           -->
  <arg name="sim" />        <!-- SIM IP address            -->
  <arg name="bag" />        <!-- Bag to replay             -->

  <group if="$(eval arg('bag')=='')" >
    <!-- Connect and update environment variables if required -->
    <machine unless="$(eval arg('sim')=='local')" name="sim_server" default="true"
             address="$(arg sim)" user="astrobee" password="astrobee" timeout="10"/>

    <!-- Update the environment variables relating to absolute paths -->
    <env unless="$(eval arg('sim')=='local')"
         name="ASTROBEE_CONFIG_DIR" value="/home/astrobee/native/config" />
    <env unless="$(eval arg('sim')=='local')"
         name="ASTROBEE_RESOURCE_DIR" value="home/astrobee/native/resources" />
    <env unless="$(eval arg('sim')=='local')"
         name="ROSCONSOLE_CONFIG_FILE" value="/home/astrobee/native/resources/logging.config"/>
    <env unless="$(eval arg('sim')=='local')"
         name="DISPLAY" value=":0"/>
    <env unless="$(eval arg('sim')=='local')"
         name="ROS_IP" value="$(arg sim)"/>

    <!-- Spawn WiFi Transmitter 1 into Gazebo -->
    <group ns="wifi1">
      <arg name="pose" default="11.9 -9.752 5.045 0 0 0 1" /> 
      <param name="robot_description" command='$(find xacro)/xacro --inorder $(find isaac_astrobee_description)/urdf/sensor_wifi_transmitter.urdf.xacro essid:="wifi1" frequency:=2442.0 power:=14.5 gain:=2.6' />
      <node name="transmitter" pkg="astrobee_gazebo" type="spawn_model" args="-param robot_description -urdf -model wifi1 -pose $(arg pose)"
        launch-prefix="bash -c 'sleep 10.0; $0 $@' " />
    </group>
    <!-- Spawn WiFi Transmitter 2 into Gazebo -->
    <group ns="wifi2">
      <arg name="pose" default="11.9 -7 5.045 0 0 0 1"/>
      <param name="robot_description" command='$(find xacro)/xacro --inorder $(find isaac_astrobee_description)/urdf/sensor_wifi_transmitter.urdf.xacro essid:="wifi2" frequency:=2442.0 power:=14.5 gain:=2.6' />
      <node name="transmitter" pkg="astrobee_gazebo" type="spawn_model" args="-param robot_description -urdf -model wifi2 -pose $(arg pose)"
        launch-prefix="bash -c 'sleep 10.0; $0 $@' " />
    </group>

    <!-- Spawn WiFi Transmitter 3 into Gazebo -->
    <group ns="wifi3">
      <arg name="pose" default="0 0 5.045 0 0 0 1"/>
      <param name="robot_description" command='$(find xacro)/xacro --inorder $(find isaac_astrobee_description)/urdf/sensor_wifi_transmitter.urdf.xacro essid:="wifi3" frequency:=2442.0 power:=14.5 gain:=2.6' />
      <node name="transmitter" pkg="astrobee_gazebo" type="spawn_model" args="-param robot_description -urdf -model wifi3 -pose $(arg pose)"
        launch-prefix="bash -c 'sleep 10.0; $0 $@' " />
    </group>

    <!-- Spawn RFID Transmitter 1 into Gazebo -->
    <group ns="RFID1">
      <arg name="pose" default="11.9 -9.752 5.045 0 0 0 1" /> 
      <param name="robot_description" command='$(find xacro)/xacro --inorder $(find isaac_astrobee_description)/urdf/sensor_RFID_transmitter.urdf.xacro essid:="RFID1" frequency:=2442.0 power:=14.5 gain:=2.6' />
      <node name="transmitter" pkg="astrobee_gazebo" type="spawn_model" args="-param robot_description -urdf -model RFID1 -pose $(arg pose)"
        launch-prefix="bash -c 'sleep 10.0; $0 $@' " />
    </group>
    <!-- Spawn RFID Transmitter 2 into Gazebo -->
    <group ns="RFID2">
      <arg name="pose" default="11.9 -7 5.045 0 0 0 1"/>
      <param name="robot_description" command='$(find xacro)/xacro --inorder $(find isaac_astrobee_description)/urdf/sensor_RFID_transmitter.urdf.xacro essid:="RFID2" frequency:=2442.0 power:=14.5 gain:=2.6' />
      <node name="transmitter" pkg="astrobee_gazebo" type="spawn_model" args="-param robot_description -urdf -model RFID2 -pose $(arg pose)"
        launch-prefix="bash -c 'sleep 10.0; $0 $@' " />
    </group>

    <!-- Spawn RFID Transmitter 3 into Gazebo -->
    <group ns="RFID3">
      <arg name="pose" default="0 0 5.045 0 0 0 1"/>
      <param name="robot_description" command='$(find xacro)/xacro --inorder $(find isaac_astrobee_description)/urdf/sensor_RFID_transmitter.urdf.xacro essid:="RFID3" frequency:=2442.0 power:=14.5 gain:=2.6' />
      <node name="transmitter" pkg="astrobee_gazebo" type="spawn_model" args="-param robot_description -urdf -model RFID3 -pose $(arg pose)"
        launch-prefix="bash -c 'sleep 10.0; $0 $@' " />
    </group>
  </group>

  <!-- We only get here if we have a valid bag specificied, no simulator will load -->
  <group unless="$(eval arg('bag')=='')" >
    <include file="$(find astrobee)/launch/controller/bagreplay.launch">
      <arg name="bag" value="$(arg bag)" />
    </include>
  </group>

 </launch>
