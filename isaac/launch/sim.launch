<!-- Copyright (c) 2021, United States Government, as represented by the     -->
<!-- Administrator of the National Aeronautics and Space Administration.     -->
<!--                                                                         -->
<!-- All rights reserved.                                                    -->
<!--                                                                         -->
<!-- The "ISAAC - Integrated System for Autonomous and Adaptive Caretaking   -->
<!-- platform" software is licensed under the Apache License, Version 2.0    -->
<!-- (the "License"); you may not use this file except in compliance with    -->
<!-- the License. You may obtain a copy of the License at                    -->
<!--                                                                         -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                          -->
<!--                                                                         -->
<!-- Unless required by applicable law or agreed to in writing, software     -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,       -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or         -->
<!-- implied. See the License for the specific language governing            -->
<!-- permissions and limitations under the License.                          -->

<launch>

  <!-- Context options (NB: THESE ARE OVERRIDDEN BY ENVIRONMENT VARIABLES)       -->
  <!-- Set robot and world correctly; environment variable over rule default     -->
  <arg name="robot" default="$(optenv ASTROBEE_ROBOT sim)" />
  <arg name="world" default="$(optenv ASTROBEE_WORLD iss)" />
  <arg name="perch" default="false" />
  <arg name="ns" default="" />                   <!-- Robot namespace prefix      -->
  <arg name="output" default="log"/>             <!-- Where nodes should log      -->
  <arg name="spurn" default=""/>                 <!-- Prevent a specific node     -->
  <arg name="nodes" default=""/>                 <!-- Launch specific nodes       -->
  <arg name="extra" default=""/>                 <!-- Inject additional node      -->
  <arg name="debug" default=""/>                 <!-- Debug node group            -->
  <arg name="sim" default="local" />             <!-- SIM IP address              -->
  <arg name="llp" default="local" />             <!-- LLP IP address              -->
  <arg name="mlp" default="local" />             <!-- MLP IP address              -->
  <arg name="ilp" default="local" />             <!-- ILP IP address              -->
  <arg name="glp" default="local" />             <!-- GLP IP address              -->
  <arg name="rec" default="" />                  <!-- Record local data           -->
  <arg name="dds" default="true" />              <!-- Enable DDS                  -->

  <!-- General options -->
  <arg name="gviz" default="false" />            <!-- Start GNC visualizer        -->
  <arg name="rviz" default="false" />            <!-- Start visualization         -->
  <arg name="gzserver" default="true" />         <!-- Start gazebo server         -->
  <arg name="gzclient" default="false" />        <!-- Start gazebo client         -->
  <arg name="rqt" default="false" />             <!-- Start user interface        -->
  <arg name="gds" default="false" />             <!-- Enable GDS                  -->
  <arg name="r2" default="false" />              <!-- Is R2 in the sim            -->
  <arg name="sim_mode" default="true" />         <!-- We are in sim mode          -->
  <arg name="wifi" default="false" />            <!-- Enable Wifi                 -->
  <arg name="streaming_mapper" default="false" /><!-- Enable the streaming mapper -->
  <arg name="acoustics_cam" default="false" />   <!-- Enable the acoustics cam    -->
  <arg name="agent1" default="Bsharp"/>          <!-- GDS Agent1                  -->
  <arg name="agent2" default="Bumble"/>          <!-- GDS Agent2                  -->
  <arg name="agent3" default="Honey"/>           <!-- GDS Agent3                  -->
  <arg name="vmware" default="true" />           <!-- Enable vmware               -->
  <arg name="speed" default="1" />               <!-- Speed multiplier            -->
  <arg name="sdebug" default="false" />          <!-- Debug simulator             -->
  <arg name="stats" default="false" />           <!-- Message statistics          -->

  <!-- Debug-specific options -->
  <arg name="default_robot" default="true" />         <!-- Insert default robot    -->
  <arg if="$(eval arg('world')=='iss' and arg('perch')==0)"
       name="pose"
       default="9.816 -9.806 4.293 0 0 0 1" />    <!-- iss: docked in JPM berth 1 --> 
       <!-- default="9.817 -10.312 4.293 1 0 0 0" - iss: docked in JPM berth 2 -->
  <arg if="$(eval arg('world')=='iss' and arg('perch'))"
       name="pose"
       default="10.7 -8.3 5.1 0.707 0 -0.707 0" />           <!-- iss: perch position     -->
  <arg if="$(eval arg('world')=='granite' and arg('perch')==0)"
       name="pose"
       default="0 0 -0.7 0 0 0 1" />                         <!-- granite: docked         -->
  <arg if="$(eval arg('world')=='granite' and arg('perch'))"
       name="pose"
       default="0 0 -0.7 0 0 0 1" />                         <!-- granite: perch position -->

  <arg name="bumble_pose" default="" />         <!-- Use to overide bumble's pose -->

  <!-- Multi-robot simulation -->
  <arg name="honey" default="false" />          <!-- Insert a honey robot    -->
  <arg name="bumble" default="false" />         <!-- Insert a bumble robot   -->
  <arg name="queen" default="false" />          <!-- Insert a queen robot    -->

  <!-- Make sure all environment variables are set for controller           -->
  <!-- Override the robot and world environment variables all the time. The -->
  <!-- environment variables are the default if they are set. So in this    -->
  <!-- case we are overriding the environment variables with themselves.    -->
  <!-- Roslaunch arguments override the environment variable which is what -->
  <!-- this will do. -->
  <!-- Astrobee -->
  <env name="ASTROBEE_ROBOT" value="$(arg robot)" />
  <env name="ASTROBEE_WORLD" value="$(arg world)" />
  <env if="$(eval optenv('ASTROBEE_CONFIG_DIR','')=='')"
       name="ASTROBEE_CONFIG_DIR" value="$(find astrobee)/config" />
  <env if="$(eval optenv('ASTROBEE_RESOURCE_DIR','')=='')"
       name="ASTROBEE_RESOURCE_DIR" value="$(find astrobee)/resources" />
  <env if="$(eval optenv('ROSCONSOLE_CONFIG_FILE','')=='')"
       name="ROSCONSOLE_CONFIG_FILE" value="$(find astrobee)/resources/logging.config"/>
  <!-- ISAAC -->
  <env if="$(eval optenv('ISAAC_CONFIG_DIR','')=='')"
       name="ISAAC_CONFIG_DIR" value="$(find isaac)/config" />
  <env if="$(eval optenv('ISAAC_RESOURCE_DIR','')=='')"
       name="ISAAC_RESOURCE_DIR" value="$(find isaac)/resources" />

  <!-- Declare our global logging format -->
  <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time}] : (${logger}) ${message}"/>

  <!-- Always launch on the local machine -->
  <group>
    <machine name ="local" address="localhost" default="true"/>
    <!-- Start the descriptions (ISS, dock, granite) for visualization purposes -->
    <include file="$(find astrobee)/launch/controller/descriptions.launch">
      <arg name="world" value="$(arg world)"/>
    </include>
    <include file="$(find isaac)/launch/controller/descriptions.launch"/>
    <!-- Start ground controller services -->
    <include if="$(arg stats)" file="$(find astrobee)/launch/controller/stats.launch"/>
    <include if="$(arg gviz)" file="$(find astrobee)/launch/controller/gviz.launch"/>
    <include if="$(arg gds)" file="$(find astrobee)/launch/controller/gds.launch">
      <arg name="world" value="$(arg world)"/>
      <arg name="agent1" value="$(arg agent1)"/>
      <arg name="agent2" value="$(arg agent2)"/>
      <arg name="agent3" value="$(arg agent3)"/>
    </include>
    <include if="$(arg rqt)" file="$(find astrobee)/launch/controller/rqt.launch"/>
    
    <group unless="$(arg r2)">
      <include if="$(arg rviz)" file="$(find isaac)/launch/controller/rviz.launch">
        <arg name="world" value="$(arg world)"/>
      </include>
    </group>
    <group if="$(arg r2)">
      <include if="$(arg rviz)" file="$(find isaac)/launch/controller/rviz.launch">
        <arg name="world" value="r2"/>
      </include>
    </group>
    
    <!-- Launch a recorder for this robot-->
    <include unless="$(eval arg('rec')=='')"
             file="$(find astrobee)/launch/controller/bagrecord.launch">
      <arg name="bag" value="$(arg rec)"/>
    </include>
  </group>

  <!-- Allow the simulator to be optionally launched remotely-->
  <group>
    <!-- Connect and update environment variables if required -->
    <machine unless="$(eval arg('sim')=='local')" name="sim_server" default="true"
             address="$(arg sim)" user="astrobee" password="astrobee" timeout="10"/>
    <!-- Update the environment variables relating to absolute paths -->
    <env unless="$(eval arg('sim')=='local')"
         name="ASTROBEE_CONFIG_DIR" value="/home/astrobee/native/config" />
    <env unless="$(eval arg('sim')=='local')"
         name="ASTROBEE_RESOURCE_DIR" value="home/astrobee/native/resources" />
    <env unless="$(eval arg('sim')=='local')"
         name="ROSCONSOLE_CONFIG_FILE" value="/home/astrobee/native/resources/logging.config"/>
    <env unless="$(eval arg('sim')=='local')"
         name="DISPLAY" value=":0"/>
    <env unless="$(eval arg('sim')=='local')"
         name="ROS_IP" value="$(arg sim)"/>
    <!-- Start the simulator -->
    <group if="$(arg gzserver)">
      <group unless="$(arg r2)">
        <include file="$(find isaac)/launch/controller/sim_start.launch">
          <arg name="world" value="$(arg world)" />
          <arg name="gzclient" value="$(arg gzclient)" />
          <arg name="vmware" value="$(arg vmware)" />
          <arg name="speed" value="$(arg speed)" />
          <arg name="debug" value="$(arg sdebug)" />
        </include>
      </group>
      <group if="$(arg r2)">
        <include file="$(find isaac)/launch/controller/sim_start.launch">
          <arg name="world" value="r2" />
          <arg name="gzclient" value="$(arg gzclient)" />
          <arg name="vmware" value="$(arg vmware)" />
          <arg name="speed" value="$(arg speed)" />
          <arg name="debug" value="$(arg sdebug)" />
        </include>
      </group>
    </group>
  </group>

  <!-- Auto-inert platform #1 at a desired initial location -->
  <group if="$(arg default_robot)">
    <include file="$(find isaac)/launch/isaac_astrobee.launch">
      <arg name="robot" value="$(arg robot)" />      <!-- Type of robot      -->
      <arg name="world" value="$(arg world)" />      <!-- Execution context  -->
      <arg name="ns" value="$(arg ns)" />            <!-- Robot namespace    -->
      <arg name="output" value="$(arg output)" />    <!-- Output for logging -->
      <arg name="pose" value="$(arg pose)" />        <!-- Initial robot pose -->
      <arg name="drivers" value="false" />           <!-- Start driver code  -->
      <arg name="spurn" value="$(arg spurn)" />      <!-- Prevent node       -->
      <arg name="nodes" value="$(arg nodes)" />      <!-- Launch node group  -->
      <arg name="extra" value="$(arg extra)" />      <!-- Inject extra nodes -->
      <arg name="debug" value="$(arg debug)" />      <!-- Debug a node set   -->
      <arg name="sim" value="$(arg sim)" />          <!-- SIM IP address     -->
      <arg name="llp" value="$(arg llp)" />          <!-- LLP IP address     -->
      <arg name="mlp" value="$(arg mlp)" />          <!-- MLP IP address     -->
      <arg name="ilp" value="$(arg ilp)" />          <!-- ILP IP address     -->
      <arg name="glp" value="$(arg glp)" />          <!-- GLP IP address     -->
      <arg name="dds" value="$(arg dds)" />          <!-- Enable DDS         -->
      <arg name="sim_mode" value="$(arg sim_mode)" /><!-- Enable sim_mode    -->
      <arg name="wifi" value="$(arg wifi)" />        <!-- Enable wifi        -->
      <arg name="streaming_mapper" value="$(arg streaming_mapper)" /><!-- Enable the isaac streaming mapper -->
      <arg name="acoustics_cam" value="$(arg acoustics_cam)" /><!-- Enable the isaac acoustics cam -->
    </include>
  </group>

  <!-- Auto-insert honey at a canned location -->
  <group if="$(arg honey)">
    <include file="$(find isaac)/launch/isaac_astrobee.launch">
      <arg name="robot" value="$(arg robot)" />      <!-- Type of robot      -->
      <arg name="world" value="$(arg world)" />      <!-- Execution context  -->
      <arg name="ns" value="honey" />                <!-- Robot namespace    -->
      <arg name="output" value="$(arg output)" />    <!-- Output for logging -->
      <arg name="pose" value="10.5 -6 4.8 0 0 0 1" />    <!-- Initial robot pose -->
      <arg name="drivers" value="false" />           <!-- Start driver code  -->
      <arg name="spurn" value="$(arg spurn)" />      <!-- Prevent node       -->
      <arg name="nodes" value="$(arg nodes)" />      <!-- Launch node group  -->
      <arg name="extra" value="$(arg extra)" />      <!-- Inject extra nodes -->
      <arg name="debug" value="$(arg debug)" />      <!-- Debug a node set   -->
      <arg name="sim" value="$(arg sim)" />          <!-- SIM IP address     -->
      <arg name="llp" value="$(arg llp)" />          <!-- LLP IP address     -->
      <arg name="mlp" value="$(arg mlp)" />          <!-- MLP IP address     -->
      <arg name="ilp" value="$(arg ilp)" />          <!-- ILP IP address     -->
      <arg name="glp" value="$(arg glp)" />          <!-- GLP IP address     -->
      <arg name="dds" value="$(arg dds)" />          <!-- Enable DDS         -->
      <arg name="sim_mode" value="$(arg sim_mode)" /><!-- Enable sim_mode    -->
      <arg name="wifi" value="$(arg wifi)" />        <!-- Enable wifi        -->
      <arg name="streaming_mapper" value="$(arg streaming_mapper)" /><!-- Enable the isaac streaming mapper -->
      <arg name="acoustics_cam" value="$(arg acoustics_cam)" /><!-- Enable the isaac acoustics cam -->
    </include>
  </group>

  <!-- Auto-insert bumble at a canned location -->
  <group if="$(arg bumble)">
    <include file="$(find isaac)/launch/isaac_astrobee.launch">
      <arg name="robot" value="$(arg robot)" />      <!-- Type of robot      -->
      <arg name="world" value="$(arg world)" />      <!-- Execution context  -->
      <arg name="ns" value="bumble" />               <!-- Robot namespace    -->
      <arg name="output" value="$(arg output)" />    <!-- Output for logging -->
      <arg if="$(eval arg('bumble_pose') == '')" 
           name="pose"  value="10.5 -7 4.8 0 0 0 1" />   <!-- Initial robot pose -->
      <arg unless="$(eval arg('bumble_pose') == '')" 
           name="pose"  value="$(arg bumble_pose)" />
      <arg name="drivers" value="false" />           <!-- Start driver code  -->
      <arg name="spurn" value="$(arg spurn)" />      <!-- Prevent node       -->
      <arg name="nodes" value="$(arg nodes)" />      <!-- Launch node group  -->
      <arg name="extra" value="$(arg extra)" />      <!-- Inject extra nodes -->
      <arg name="debug" value="$(arg debug)" />      <!-- Debug a node set   -->
      <arg name="sim" value="$(arg sim)" />          <!-- SIM IP address     -->
      <arg name="llp" value="$(arg llp)" />          <!-- LLP IP address     -->
      <arg name="mlp" value="$(arg mlp)" />          <!-- MLP IP address     -->
      <arg name="ilp" value="$(arg ilp)" />          <!-- ILP IP address     -->
      <arg name="glp" value="$(arg glp)" />          <!-- GLP IP address     -->
      <arg name="dds" value="$(arg dds)" />          <!-- Enable DDS         -->
      <arg name="sim_mode" value="$(arg sim_mode)" /><!-- Enable sim_mode    -->
      <arg name="wifi" value="$(arg wifi)" />        <!-- Enable wifi        -->
      <arg name="streaming_mapper" value="$(arg streaming_mapper)" /><!-- Enable the isaac streaming mapper -->
      <arg name="acoustics_cam" value="$(arg acoustics_cam)" /><!-- Enable the isaac acoustics cam -->
    </include>
  </group>

  <!-- Auto-insert queen at a canned location -->
  <group if="$(arg queen)">
    <include file="$(find isaac)/launch/isaac_astrobee.launch">
      <arg name="robot" value="$(arg robot)" />      <!-- Type of robot      -->
      <arg name="world" value="$(arg world)" />      <!-- Execution context  -->
      <arg name="ns" value="queen" />                <!-- Robot namespace    -->
      <arg name="output" value="$(arg output)" />    <!-- Output for logging -->
      <arg name="pose" value="10.5 -8 4.8 0 0 0 1" />    <!-- Initial robot pose -->
      <arg name="drivers" value="false" />           <!-- Start driver code  -->
      <arg name="spurn" value="$(arg spurn)" />      <!-- Prevent node       -->
      <arg name="nodes" value="$(arg nodes)" />      <!-- Launch node group  -->
      <arg name="extra" value="$(arg extra)" />      <!-- Inject extra nodes -->
      <arg name="debug" value="$(arg debug)" />      <!-- Debug a node set   -->
      <arg name="sim" value="$(arg sim)" />          <!-- SIM IP address     -->
      <arg name="llp" value="$(arg llp)" />          <!-- LLP IP address     -->
      <arg name="mlp" value="$(arg mlp)" />          <!-- MLP IP address     -->
      <arg name="ilp" value="$(arg ilp)" />          <!-- ILP IP address     -->
      <arg name="glp" value="$(arg glp)" />          <!-- GLP IP address     -->
      <arg name="dds" value="$(arg dds)" />          <!-- Enable DDS         -->
      <arg name="sim_mode" value="$(arg sim_mode)" /><!-- Enable sim_mode    -->
      <arg name="wifi" value="$(arg wifi)" />        <!-- Enable wifi        -->
      <arg name="streaming_mapper" value="$(arg streaming_mapper)" /><!-- Enable the isaac streaming mapper -->
      <arg name="acoustics_cam" value="$(arg acoustics_cam)" /><!-- Enable the isaac acoustics cam -->
    </include>
  </group>

  <!-- Default call initialize bias so config file is created if not already present -->
  <node pkg="rosservice" type="rosservice" name="imu_calibration" args="call --wait /gnc/ekf/init_bias" />

</launch>
